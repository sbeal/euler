# Steve Beal
# Project Euler problem 2 solution
# 1/31/14

# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not
# exceed four million, find the sum of the even-valued terms.

def even_fib_sum(N):
    # calculate two values of fib sequence at a time
    x, y, total = 1, 2, 0
    while y < N:
        if y % 2 == 0:
            total += y
        x, y = y, x+y # simultaneous assignment via unpacking of right-hand side tuple
    return total




# noting that only every third value after 1, 2 in the Fib sequence is even
# note: only reached this solution after reading answer
def even_fib_sum2(N):
    x, y, z, total = 1, 1, 2, 0
    while y < N:
        total += z
        x = y+z     # next fib val
        y = z+x     # second fib val
        z = x+y     # third fib val
    return total


limit = 4000000
print(even_fib_sum(limit))
print(even_fib_sum2(limit))